{% for environment in ['preview', 'staging', 'production'] %}
- job:
    name: "update-index-{{ environment }}"
    display-name: "Update index - {{ environment }}"
    project-type: freestyle
    description: >
      This job updates an existing ElasticSearch index with services or briefs as they exist in the database

      In all likelihood you want to reindex all existing briefs or services to their corresponding index.

      Visiting either https://search-api.<STAGE>.marketplace.team/_status or
      https://search-api.digitalmarketplace.service.gov.uk/_status will show you currently available indexes and their
      aliases.

      To reindex all briefs your object will be 'briefs', the index will be 'briefs-digital-outcomes-and-specialists'
      and the frameworks should be 'digital-outcomes-and-specialists,digital-outcomes-and-specialists-2'

      To reindex the g-cloud services list the object is 'services', the index is 'g-cloud-10' and the frameworks would
      be 'g-cloud-10'

      However you may be testing a new index and want to input its name and frameworks manually.
    parameters:
      - choice:
          name: OBJECTS
          choices:
            - briefs
            - services
      - string:
          name: INDEX
          description: "The current name or alias of the index you want to update (briefs-digital-outcomes-and-specialists or g-cloud-10)"
      - string:
          name: FRAMEWORKS
          description: >
            Comma-separated list of framework slugs that should be indexed
            (eg 'g-cloud-10' or 'digital-outcomes-and-specialists,digital-outcomes-and-specialists-2').
      - bool:
          name: SERIAL
          default: true
          description: "Perform a non-parallel indexing. Turn this on for clearer debugging."
    publishers:
      - trigger-parameterized-builds:
          - project: notify-slack
            condition: UNSTABLE_OR_WORSE
            predefined-parameters: |
              USERNAME=update-index
              JOB=Update index - {{ environment }} :jenkins_parrot:
              ICON=:alarm_clock:
              STAGE={{ environment }}
              STATUS=FAILED
              URL=<${BUILD_URL}consoleFull|#${BUILD_NUMBER}>
              CHANNEL=#dm-release
    builders:
      - shell: |
          if [ "$SERIAL" = "true" ]; then
            FLAGS="--serial"
          fi

          docker run -e DM_DATA_API_TOKEN_{{ environment|upper }} -e DM_SEARCH_API_TOKEN_{{ environment|upper }} digitalmarketplace/scripts scripts/index-to-search-service.py "${OBJECTS}" '{{ environment }}' --index="${INDEX}" --frameworks="${FRAMEWORKS}" $FLAGS
{% endfor %}
