---
- job:
    name: "update-infrastructure"
    display-name: "Update infrastructure"
    project-type: freestyle
    description: |
      Applies AWS CloudFormation changes and nginx/elasticsearch AMI updates.
      Can be used to create new AWS environments within defined stages
    parameters:
      - choice:
          name: STAGE
          choices:
            - preview
            - staging
            - production
      - choice:
          name: STACK_NAME
          choices:
            - www
            - route53rootrecords
      - string:
          name: ENVIRONMENT
    scm:
      - git:
          url: git@github.com:alphagov/digitalmarketplace-aws.git
          credentials-id: github_com_and_gds
          branches:
            - master
          wipe-workspace: false
    wrappers:
      - build-name:
          name: '#${BUILD_NUMBER}-${ENV, var="STACK_NAME"}-${ENV, var="STAGE"}'
    triggers:
      - pollscm: "H/2 * * * *"
    builders:
      - shell: |
          #!/bin/bash -xe

          pushd ~jenkins/digitalmarketplace-credentials
          git pull
          popd

          [ -d venv ] || virtualenv venv

          . ./venv/bin/activate
          pip install -e .

          if [ "$STAGE" = "Select one" -o "$STAGE" = "" ]; then
            >&2 echo "You must select an environment."
            exit 1
          fi


          if [ "$ENVIRONMENT" = "STAGE" -o "$ENVIRONMENT" = "" ]; then
            ENVIRONMENT=$STAGE
          fi

          AWS_PROFILE="$STAGE" dmaws $STAGE $ENVIRONMENT create -f ~/digitalmarketplace-credentials/dmaws-vars-files/${STAGE}.yml $STACK_NAME
    publishers:
      - trigger-parameterized-builds:
          - project: notify-slack
            condition: UNSTABLE_OR_WORSE
            predefined-parameters: |
              USERNAME=deploy
              PROJECT=$STACK_NAME
              JOB="Update infrastructure"
              ICON=:fire:
              STAGE=$STAGE
              STATUS=FAILED
              URL=<${BUILD_URL}consoleFull|${BUILD_DISPLAY_NAME}>
              CHANNEL=#dm-release
          - project: notify-slack
            condition: SUCCESS
            predefined-parameters: |
              USERNAME=deploy
              JOB="Update infrastructure"
              PROJECT=$STACK_NAME
              ICON=:devops:
              STAGE=$STAGE
              STATUS=SUCCESS
              URL=<${BUILD_URL}consoleFull|${BUILD_DISPLAY_NAME}>
              CHANNEL=#dm-release
