{% set environments = ['preview', 'production'] %}
{% set NOTIFY_TEMPLATE_ID = '7379f74f-3f51-4b50-950c-d86b7880e999' %}
---
{% for environment in environments %}
- job:
    name: "notify-suppliers-of-awarded-briefs-{{ environment }}"
    display-name: "Notify suppliers that a brief they applied to has been awarded - {{ environment }}"
    project-type: freestyle
    description: "Send email notifications to supplier users if they have a completed application to a brief that has been awarded."
    parameters:
      - string:
          name: AWARDED_AT
          default: null
          description: "Specify a given date, send emails for briefs awarded on that date (format: YYYY-MM-DD)"
      - string:
          name: BRIEF_RESPONSE_IDS
          default: null
          description: "Comma-separated list of BriefResponse IDs to be emailed (e.g. '1234,5678')"
      - bool:
          name: DRY_RUN
          default: false
          description: "List notifications that would be sent without sending the emails"
    triggers:
      - timed: "H 8 * * *"
    publishers:
      - trigger-parameterized-builds:
          - project: notify-slack
            condition: UNSTABLE_OR_WORSE
            predefined-parameters: |
              USERNAME=supplier-brief-awards
              JOB=Notify suppliers of brief awards {{ environment }}
              ICON=:crystal_ball:
              STAGE={{ environment }}
              STATUS=FAILED
              URL=<${BUILD_URL}consoleFull|#${BUILD_NUMBER}>
              CHANNEL=#dm-release
    builders:
      - shell: |
          if [ -n "$AWARDED_AT" ]; then
            FLAGS="--awarded_at=$AWARDED_AT"
          fi

          if [ -n "$BRIEF_RESPONSE_IDS" ]; then
            FLAGS="$FLAGS --brief_response_ids=$BRIEF_RESPONSE_IDS"
          fi

          if [ "$DRY_RUN" = "true" ]; then
            FLAGS="$FLAGS --dry-run"
          fi

          docker run digitalmarketplace/scripts scripts/notify-suppliers-of-awarded-briefs.py '{{ environment }}' "$DM_DATA_API_TOKEN_{{ environment|upper }}" $NOTIFY_API_TOKEN {{ NOTIFY_TEMPLATE_ID }} $FLAGS --verbose
{% endfor %}
