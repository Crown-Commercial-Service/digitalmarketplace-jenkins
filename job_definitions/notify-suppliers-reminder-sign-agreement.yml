- job:
    name: "remind-suppliers-to-sign-framework-agreement-(43)"
    display-name: "Remind suppliers to sign framework agreement (43)"
    project-type: pipeline
    description: "Send a reminder email to suppliers who have at least one successful lot entry on the given framework but who have not yet signed their framework agreement."
    parameters:
      - choice:
          name: STAGE
          choices:
            - preview
            - staging
            - production
      - string:
          name: FRAMEWORK_SLUG
          default: null
          description: "Framework Slug e.g. 'digital-outcomes-and-specialists-5'"
      - string:
          name: SUPPLIER_IDS
          default: null
          description: "Optional comma-separated list of Supplier IDs to be emailed (e.g. '1234,5678'). By default all applicable suppliers will be notified."
      - bool:
          name: DRY_RUN
          default: false
          description: "List notifications that would be sent without sending the emails"

    dsl: |
      node {
        try {
          stage('Clone frameworks') {
             dir('digitalmarketplace-frameworks') {
               git url: 'git@github.com:alphagov/digitalmarketplace-frameworks.git', branch: 'master', credentialsId: 'github_com_and_enterprise', poll: true
             }
           }
          stage('Run script') {
            sh('''
                if [ -n "$SUPPLIER_IDS" ]; then
                  FLAGS="$FLAGS --supplier-id=$SUPPLIER_IDS"
                fi

                if [ "$DRY_RUN" = "true" ]; then
                  FLAGS="$FLAGS --dry-run"
                fi

                docker run --rm \
                -e DM_DATA_API_TOKEN_${STAGE^^} \
                --mount type=bind,source="$PWD/digitalmarketplace-frameworks",target=/digitalmarketplace-frameworks \
                digitalmarketplace/scripts \
                scripts/framework-applications/remind-suppliers-to-sign-framework-agreement.py \
                ${STAGE} ${FRAMEWORK_SLUG} $NOTIFY_API_TOKEN /digitalmarketplace-frameworks $FLAGS
          ''')
          }
        } catch(err) {
      currentBuild.result = 'FAILURE'
                            echo "Error: ${err}"
                            build job: 'notify-slack', parameters: [
                              string(name: 'USERNAME', value: 'remind-suppliers-to-sign-framework-agreement-(43)'),
                              string(name: 'JOB', value: "Remind suppliers to sign framework agreement (43)"),
                              string(name: 'ICON', value: ':crystal_ball:'),
                              string(name: 'STAGE', value: "${STAGE}"),
                              string(name: 'STATUS', value: 'FAILED'),
                              string(name: 'CHANNEL', value: '#dm-2ndline'),
                              text(name: 'URL', value: "<${BUILD_URL}consoleFull|${BUILD_DISPLAY_NAME}>")
                                  ]}
      }
      build job: "notify-slack",
                  parameters: [
                    string(name: 'USERNAME', value: 'remind-suppliers-to-sign-framework-agreement-(43)'),
                    string(name: 'ICON', value: ':e-mail:'),
                    string(name: 'JOB', value: "Remind suppliers to sign framework agreement (43)"),
                    string(name: 'CHANNEL', value: "#dm-release"),
                    text(name: 'STATUS', value: "SUCCESS"),
                    text(name: 'URL', value: "<${BUILD_URL}consoleFull|${BUILD_DISPLAY_NAME}>")
                  ]
