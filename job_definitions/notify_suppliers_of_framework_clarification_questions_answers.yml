{% set environments = ['preview', 'production'] %}
{% set notify_template_id = 'ed9944eb-112e-4f04-a4bb-19f397550ffe' %}
{% set default_framework_slug = 'g-cloud-12' %}
---
{% for environment in environments %}
- job:
    name: "notify-suppliers-of-framework-clarification-questions-answers-{{ environment }}"
    display-name: "Notify suppliers of new framework clarification questions and answers - {{ environment }}"
    project-type: freestyle
    disabled: true
    description: |
      Send email notifications to supplier users about new framework clarification questions and answers.
      This job is triggered manually, after a framework manager admin has uploaded a new set of clarification PDFs.
    parameters:
      - string:
          name: RESUME_RUN_ID
          description: "UUID of a previously failed run to use for resending (this will skip any users who were successfully emailed)"
      - string:
          name: FRAMEWORK_SLUG
          default: {{ default_framework_slug }}
          description: "Framework to send notifications about, e.g. 'g-cloud-12'. Must have status 'open' or the script will fail."
      - bool:
          name: DRY_RUN
          default: false
          description: "List notifications that would be sent without sending the emails"
    scm:
      - git:
          url: git@github.com:alphagov/digitalmarketplace-scripts.git
          credentials-id: github_com_and_enterprise
          branches:
            - master
          wipe-workspace: false
    publishers:
      - trigger-parameterized-builds:
          - project: notify-slack
            condition: UNSTABLE_OR_WORSE
            predefined-parameters: |
              USERNAME=framework-question-and-answers
              JOB=Notify suppliers of new framework clarification questions and answers {{ environment }}
              ICON=:frame_with_picture:
              STAGE={{ environment }}
              STATUS=FAILED
              URL=<${BUILD_URL}consoleFull|#${BUILD_NUMBER}>
              CHANNEL=#dm-2ndline
    builders:
      - shell: |
          if [ -n "$RESUME_RUN_ID" ]; then
            FLAGS="--resume-run-id=$RESUME_RUN_ID"
          fi

          if [ "$DRY_RUN" = "true" ]; then
            FLAGS="$FLAGS --dry-run"
          fi

          docker run -e DM_DATA_API_TOKEN_{{ environment|upper }} digitalmarketplace/scripts scripts/notify-suppliers-of-new-fw-cq-answers.py {{ environment }} $FRAMEWORK_SLUG $NOTIFY_API_TOKEN {{ notify_template_id }} $FLAGS
{% endfor %}
