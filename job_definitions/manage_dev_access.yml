{% set jobs = [
  {"name": "open", "action": "create"},
  {"name": "close", "action": "delete"}
] %}
---
{% for job in jobs %}
- job:
    name: "{{ job.name }}-developer-access"
    display-name: "{{ job.name|title }} developer access"
    project-type: freestyle
    description: |
      {{ job.name|title }}s dev access to boxes in a selected AWS environment.
    parameters:
      - choice:
          name: STAGE
          choices:
            - Select one
            - preview
            - staging
            - production
      - choice:
          name: STACK_NAME
          choices:
            - dev-access
            - nginx-ssh-access
            - database-dev-access
            - elasticsearch-dev-access
            - elasticsearch-ssh-access
            - api-ssh-access
            - search-api-ssh-access
            - admin-frontend-ssh-access
            - buyer-frontend-ssh-access
            - supplier-frontend-ssh-access
    scm:
      - git:
          url: git@github.com:alphagov/digitalmarketplace-aws.git
          credentials-id: github_com_and_gds
          branches:
            - master
    wrappers:
      - build-name:
          name: '#${BUILD_NUMBER}-${ENV, var="STACK_NAME"}-${ENV var="STAGE"}'
    builders:
      - shell: |
          #!/bin/bash -xe
          
          pushd ~jenkins/digitalmarketplace-credentials
          git pull
          popd
          
          [ -d venv ] || virtualenv venv
          
          . ./venv/bin/activate
          pip install -e .
          
          AWS_PROFILE="$STAGE" dmaws $STAGE $STAGE {{ job.action }} -f ~jenkins/digitalmarketplace-credentials/dmaws-vars-files/$STAGE.yml $STACK_NAME --ignore-dependencies
    publishers:
      - trigger-parameterized-builds:
          - project: notify-slack
            condition: UNSTABLE_OR_WORSE
            predefined-parameters: |
              USERNAME=deploy
              PROJECT=$STACK_NAME
              JOB="{{ job.name|title }} developer access"
              ICON=:fire:
              STAGE=$STAGE
              STATUS=FAILED
              URL=<${BUILD_URL}consoleFull|${BUILD_DISPLAY_NAME}>
              CHANNEL=#dm-release
          - project: notify-slack
            condition: SUCCESS
            predefined-parameters: |
              USERNAME=deploy
              JOB="{{ job.name|title }} developer access"
              PROJECT=$STACK_NAME
              ICON=:devops:
              STAGE=$STAGE
              STATUS=SUCCESS
              URL=<${BUILD_URL}consoleFull|${BUILD_DISPLAY_NAME}>
              CHANNEL=#dm-release
{% endfor %}
- job:
    name: "nightly-close-developer-access"
    display-name: "Nightly close developer access"
    project-type: freestyle
    description: "Close all developer access every evening"
    triggers:
      - timed: "H 2 * * *"
    builders:
      - trigger-builds:
        - project: close-developer-access
          predefined-parameters: |
            STAGE=preview
            STACK_NAME=dev-access
        - project: close-developer-access
          predefined-parameters: |
            STAGE=staging
            STACK_NAME=dev-access
        - project: close-developer-access
          predefined-parameters: |
            STAGE=production
            STACK_NAME=dev-access
