{% set jobs = [
  {"environment": "preview",
   "display_name": "preview",
   "description": "Run the functional test suite against the preview environment",
  },
  {"environment": "staging",
   "display_name": "staging",
   "description": "Run the functional test suite against the staging environment",
  },
] %}
---
{% for job in jobs %}
- job:
    name: "functional-tests-{{ job.environment }}"
    display-name: "Functional tests - {{ job.display_name }}"
    project-type: freestyle
    description: "{{ job.description }}"
    properties:
      - build-discarder:
          days-to-keep: 60
          num-to-keep: 100
      - throttle:
          categories:
            - EndToEndTest-{{ job.environment }}
          option: category
    parameters:
      - string:
          name: FT_BRANCH_NAME
          default: "main"
    scm:
      - git:
          url: git@github.com:alphagov/digitalmarketplace-functional-tests.git
          credentials-id: github_com_and_enterprise
          branches:
            - "${FT_BRANCH_NAME}"
          wipe-workspace: false
    triggers:
      - pollscm:
          cron: "H/2 * * * *"
    wrappers:
      - ansicolor
    publishers:
      - html-publisher:
          name: "functional test report"
          dir: reports
          files: index.html
          keep-all: true
          allow-missing: true
          link-to-last-build: true
      - trigger-parameterized-builds:
          - project: notify-slack
            condition: UNSTABLE_OR_WORSE
            predefined-parameters: |
              USERNAME=functional-tests
              JOB=Functional tests - {{ job.display_name }}
              ICON=:broken_walnut:
              STAGE={{ job.environment }}
              STATUS=FAILED
              URL=<${BUILD_URL}functional_test_report|${BUILD_DISPLAY_NAME}>
              CHANNEL=#dm-release
          - project: notify-slack
            condition: SUCCESS
            predefined-parameters: |
              USERNAME=functional-tests
              JOB=Functional tests - {{ job.display_name }}
              ICON=:goldmedal:
              STAGE={{ job.environment }}
              STATUS=SUCCESS
              URL=<${BUILD_URL}consoleFull|${BUILD_DISPLAY_NAME}>
              CHANNEL=#dm-release
    builders:
      - build-name-setter:
          template: "#${BUILD_NUMBER} - ${FT_BRANCH_NAME}"
          macro: true
      - shell: |
          gem install bundler --conservative

          set +x # do not echo credentials - remove for debugging

          export DM_API_DOMAIN="{{ app_urls[job.environment].data_api }}"
          export DM_API_ACCESS_TOKEN="$DM_DATA_API_TOKEN_{{ job.environment|upper }}"

          export DM_SEARCH_API_DOMAIN="{{ app_urls[job.environment].search_api }}"
          export DM_SEARCH_API_ACCESS_TOKEN="$DM_SEARCH_API_TOKEN_{{ job.environment|upper }}"

          export DM_ANTIVIRUS_API_DOMAIN="{{ app_urls[job.environment].antivirus_api }}"
          export DM_ASSETS_DOMAIN="{{ app_urls[job.environment].assets }}"

          export DM_FRONTEND_DOMAIN="{{ app_urls[job.environment].www }}"

          export DM_NOTIFY_API_KEY="$NOTIFY_API_FUNCTIONAL_TESTS_KEY_{{ job.environment|upper }}"

          export DM_SUPPLIER_USER_EMAIL="{{ smoke_test_variables[job.environment].supplier_email }}"
          export DM_SUPPLIER_USER_PASSWORD="{{ smoke_test_variables[job.environment].supplier_password }}"
          export DM_SUPPLIER_USER_SUPPLIER_ID="{{ smoke_test_variables[job.environment].supplier_id }}"

          export DM_BUYER_USER_EMAIL="{{ smoke_test_variables[job.environment].buyer_email }}"
          export DM_BUYER_USER_PASSWORD="{{ smoke_test_variables[job.environment].buyer_password }}"

          export DM_ADMIN_USER_EMAIL="{{ smoke_test_variables[job.environment].admin_email }}"
          export DM_ADMIN_USER_PASSWORD="{{ smoke_test_variables[job.environment].admin_password }}"

          export DM_ADMIN_CCS_CATEGORY_USER_EMAIL="{{ smoke_test_variables[job.environment].admin_ccs_category_email }}"
          export DM_ADMIN_CCS_CATEGORY_USER_PASSWORD="{{ smoke_test_variables[job.environment].admin_ccs_category_password }}"

          export DM_ADMIN_CCS_SOURCING_USER_EMAIL="{{ smoke_test_variables[job.environment].admin_ccs_sourcing_email }}"
          export DM_ADMIN_CCS_SOURCING_USER_PASSWORD="{{ smoke_test_variables[job.environment].admin_ccs_sourcing_password }}"

          export DM_ADMIN_CCS_DATA_CONTROLLER_USER_EMAIL="{{ smoke_test_variables[job.environment].admin_ccs_data_controller_email }}"
          export DM_ADMIN_CCS_DATA_CONTROLLER_USER_PASSWORD="{{ smoke_test_variables[job.environment].admin_ccs_data_controller_password }}"

          export DM_ADMIN_MANAGER_USER_EMAIL="{{ smoke_test_variables[job.environment].admin_manager_email }}"
          export DM_ADMIN_MANAGER_USER_PASSWORD="{{ smoke_test_variables[job.environment].admin_manager_password }}"

          export DM_ADMIN_FRAMEWORK_MANAGER_USER_EMAIL="{{ smoke_test_variables[job.environment].admin_framework_manager_email }}"
          export DM_ADMIN_FRAMEWORK_MANAGER_USER_PASSWORD="{{ smoke_test_variables[job.environment].admin_framework_manager_password }}"

          export DM_DOCUMENTS_BUCKET_NAME="digitalmarketplace-documents-{{ job.environment }}-{{ job.environment }}"

          set -x # restore echo

          export DM_PAGINATION_LIMIT=100

          export DM_ENVIRONMENT={{ job.environment }}

          make run-parallel && make build-report || ( make build-report; make rerun )
{% endfor %}
