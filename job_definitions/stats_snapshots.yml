{# frameworks = (framework_slug, drive_folder, enabled?) #}

{#    ('digital-outcomes-and-specialists-6', '1QSiKocZbuQeGXqeIKMoNDK4RvvFeNtnb', False),    #}
{#    ('digital-outcomes-and-specialists-7', '1PZQp2c_3O3fe82POThq6Gea6AHD1L2b0', False),    #}
{#    ('digital-outcomes-and-specialists-8', '19C-pOTvBh8ki9LOeWBf3AUm_DDVkzqUR', False),    #}
{#    ('digital-outcomes-and-specialists-9', '1x5-70gVBb2sFbxmVObs8qWUkDmHwUE-4', False),    #}
{#    ('g-cloud-13', '16gkAlN9oR1JTakk1c0blPA_zabcIWRSG', False)    #}
{#    ('g-cloud-14', '1zi8hwhymblSXsSgWsVcsIT1nHX5j-0Pb', False)    #}
{#    ('g-cloud-15', '1oN1UoDNYXWoJruHzfGO9yC0SvfDt9wWN', False)    #}
{#    ('g-cloud-16', '1fWI3LrnPU1cHVYo_83KWfgND-lng2ztM', False)    #}

{% set frameworks = (
    ('g-cloud-12', '1LVGqBCRhjpl2OrKaUouh8rEiV3dpBep_', False),
    ('digital-outcomes-and-specialists-5', '1KqVLn0yHBt3Sd7BJrNwo1mw7C31HCpPB', False),
) %}

{% set environments = ['production'] %}
---

{% for environment in environments %}
{% for framework, drive_folder, enabled in frameworks %}
- job:
    name: hourly-stats-snapshot-{{ framework }}-{{ environment }}
    display-name: Snapshot stats for {{ framework }} - {{ environment }} - Hourly Audit Event Dump
    description: Creates an hourly snapshot of framework stats and stores it in the API audit event
{% if not enabled %}
    disabled: true
{% endif %}
    project-type: freestyle
    properties:
      - build-discarder:
          days-to-keep: 20
          artifact-days-to-keep: 20
    triggers:
      - timed: "H * * * *"
    publishers:
      - trigger-parameterized-builds:
          - project: notify-slack
            condition: UNSTABLE_OR_WORSE
            predefined-parameters: |
              USERNAME=snapshot-stats
              JOB=Snapshot {{ framework }} stats {{ environment }}
              ICON=:alarm_clock:
              STAGE={{ environment }}
              STATUS=FAILED
              URL=<${BUILD_URL}consoleFull|#${BUILD_NUMBER}>
              CHANNEL=#dm-2ndline
    builders:
      - shell: |
          docker run --rm \
            -e DM_DATA_API_TOKEN_{{ environment|upper }} \
            digitalmarketplace/scripts \
              scripts/framework-applications/snapshot-framework-stats.py "{{ environment }}" "{{ framework }}"
{% endfor %}
{% endfor %}

{% for environment in environments %}
{% for framework, drive_folder, enabled in frameworks %}
- job:
    name: daily-stats-snapshot-{{ framework }}-{{ environment }}
    display-name: "Snapshot stats for {{ framework }} - {{ environment }} - Daily GDrive Dump"
{% if not enabled %}
    disabled: true
{% endif %}
    project-type: pipeline
    triggers:
      - timed: "H 23 * * *"
    description: |
      <p>Daily export of application statistics to Google Drive. Also logs to audit event.</p>
    dsl: |

      def notify_slack() {
        build job: "notify-slack",
          parameters: [
            string(name: 'USERNAME', value: "upload-application-statistics-{{ environment }}"),
            string(name: 'ICON', value: ':sad-docker:'),
            string(name: 'JOB', value: "Upload application stats - {{ environment }}"),
            string(name: 'CHANNEL', value: "#dm-release"),
            text(name: 'STAGE', value: "{{ environment }}"),
            text(name: 'STATUS', value: 'FAILED'),
            text(name: 'URL', value: "<${BUILD_URL}consoleFull|${BUILD_DISPLAY_NAME}>")
          ]
      }

      node {
        currentBuild.displayName = "#${BUILD_NUMBER} - {{ environment }}"
        withEnv(["FILENAME=./data/{{ environment }}-{{ framework }}-application-statistics-${new java.text.SimpleDateFormat('yyyyMMddHHmm').format(new Date())}.json"]) {
          try {
            stage("Clean data directory") {
              sh("rm -rf ./data && mkdir data")
            }
            stage("Export statistics") {
              sh('''
                docker run --rm \
                  -e DM_DATA_API_TOKEN_{{ environment|upper }} \
                  --user $(id -u) \
                  --volume $(pwd)/data:/app/data \
                  digitalmarketplace/scripts \
                    scripts/framework-applications/snapshot-framework-stats.py \
                      "{{ environment }}" \
                      "{{ framework }}" \
                      --outfile="${FILENAME}"

              ''')
            }
            stage("Upload to drive") {
              sh('''
                /usr/local/bin/gdrive \
                  --config "/home/jenkins/.gdrive" \
                  upload --delete \
                  --parent "{{ drive_folder }}" \
                  "${FILENAME}"
              ''')
            }
          } catch(err) {
            notify_slack()
          }
        }
      }
{% endfor %}
{% endfor %}
