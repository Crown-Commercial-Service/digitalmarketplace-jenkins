---
- job:
    name: "rotate-ft-account-passwords"
    display-name: "Rotate functional test account passwords"
    project-type: pipeline
    description: "Regenerates passwords for all DMP accounts found in jenkins' functional/smoke/smoulder tests section of the credentials repo, then synchronizes them via the API"
    parameters:
      - choice:
          name: STAGE
          choices:
            - preview
            - staging
            - production
    dsl: |
      currentBuild.displayName = "#${BUILD_NUMBER} - ${STAGE}"
      node {
        stage("Generate new FT account passwords") {
          sh('''
            docker run --rm \
              -v $HOME/.aws:/root/.aws \
              -e GITHUB_ACCESS_TOKEN \
              digitalmarketplace/scripts \
              scripts/rotate-api-tokens.sh change-ft-account-passwords $STAGE
          ''')
        }
        stage("Disable functional/smoke/smoulder tests") {
          milestone()
          waitUntil {
            try {
              input(message: "1/2: You should now temporarily disable the functional tests, smoke tests and smoulder tests for this stage")
              input(message: "2/2: Have you definitely disabled the functional tests, smoke tests and smoulder tests for this stage? Great. Go ahead.")
              return true
            } catch(error) {
              input(message: "If you *definitely* want to abandon this pipeline, click 'Abort' again. If not, click 'Proceed' to continue.")
              return false
            }
          }
          milestone()
        }
        stage("Merge credentials PR") {
          milestone()
          waitUntil {
            try {
              input(message: "1/2: Do not continue until the Pull Request updating FT account passwords has been merged to master.")
              input(message: "2/2: Have you definitely merged the dm-credentials Pull Request? Great. Go ahead.")
              return true
            } catch(error) {
              input(message: "If you *definitely* want to abandon this pipeline, click 'Abort' again. If not, click 'Proceed' to continue.")
              return false
            }
          }
          milestone()
        }
        stage("Update Jenkins Credentials") {
          build job: "update-credentials"
        }
        stage("Update Jenkins Jobs") {
          milestone()
          waitUntil {
            try {
            input(message: "1/2: You should now re-push all Jenkins jobs by running `make jenkins TAGS=jobs` (with an up-to-date DM_CREDENTIALS_REPO defined) to synchronize embedded credentials in Jenkins' jobs with the just-merged tokens. Be careful to check whether there are any outstanding applied-but-unmerged jenkins job changes that people don't want overwritten.")
              input(message: "2/2: Have you run `make jenkins TAGS=jobs` (with an up-to-date DM_CREDENTIALS_REPO defined)? Great. Go ahead.")
              return true
            } catch(error) {
              input(message: "If you *definitely* want to abandon this pipeline, click 'Abort' again. If not, click 'Proceed' to continue.")
              return false
            }
          }
          milestone()
        }
        stage("Synchronize passwords in dm-credentials with DMP") {
          sh('''
            docker run --rm \
              -v /var/lib/jenkins/digitalmarketplace-credentials:/digitalmarketplace-credentials \
              -v $HOME/.aws:/root/.aws \
              -e DM_CREDENTIALS_REPO=/digitalmarketplace-credentials \
              -e GITHUB_ACCESS_TOKEN \
              digitalmarketplace/scripts \
              scripts/rotate-api-tokens.sh sync-ft-account-passwords $STAGE
          ''')
        }
        stage("Re-enable functional/smoke/smoulder tests") {
          milestone()
          waitUntil {
            try {
              input(message: "1/2: You haven't finished until you've re-enabled the functional tests, smoke tests and smoulder tests for this stage")
              input(message: "2/2: Have you definitely re-enabled the functional tests, smoke tests and smoulder tests for this stage? Great. Go ahead.")
              return true
            } catch(error) {
              input(message: "If you *definitely* want to abandon this pipeline, click 'Abort' again. If not, click 'Proceed' to continue.")
              return false
            }
          }
          milestone()
        }
      }
