---
- job:
    name: "update-tls-cert"
    display-name: "Update TLS certificate"
    project-type: freestyle
    description: |
      Checks ELB TLS certificate expiration date and gets a new certificate from letsencrypt if necessary.
    parameters:
      - choice:
          name: TARGET_STAGE
          choices:
            - Select one
            - preview
    logrotate:
      daysToKeep: 120
      artifactDaysToKeep: 120
    scm:
      - git:
          url: https://github.com/alex/letsencrypt-aws.git
          branches:
            - eefc4158508cd5192ed8fa4d7a2dc63aa00e2c0c
          wipe-workspace: false
    wrappers:
      - ansicolor
    builders:
      - shell: |
          #!/bin/bash -xe

          [ -d venv ] || virtualenv venv

          . ./venv/bin/activate
          pip install -r requirements.txt
          pip install awscli

          export AWS_DEFAULT_REGION=eu-west-1
          export AWS_PROFILE=${TARGET_STAGE}

          ELB_NAME=nginx-${TARGET_STAGE}-${TARGET_STAGE}
          CERTIFICATE_NAME=${ELB_NAME}
          OLD_CERTIFICATE_NAME=${ELB_NAME}-until-$(date +'%Y-%m-%d')

          # Find a non-private Route 53 hosted zone ID
          ROUTE53_ZONE_ID=$(aws route53 list-hosted-zones --query 'HostedZones[?Config.PrivateZone == `false`].Id' --output text)

          # Find the DNS name for the main external ELB
          ELB_DNS=$(aws elb describe-load-balancers --load-balancer-name $ELB_NAME --query 'LoadBalancerDescriptions[0].DNSName' --output text)

          # Get all Route 53 records pointing to the ELB DNS name and drop the trailing dot
          # This builds a JSON list of all subdomains pointing to the ELB
          HOSTS=$(aws route53 list-resource-record-sets --hosted-zone-id "${ROUTE53_ZONE_ID}" --query 'ResourceRecordSets[?ResourceRecords[0].Value == `'${ELB_DNS}'`].Name' | sed 's/gov.uk./gov.uk/')


          export LETSENCRYPT_AWS_CONFIG=$(cat <<EOF
          {
              "domains": [
                  {
                      "elb": {
                          "name": "${ELB_NAME}"
                      },
                      "hosts": ${HOSTS}
                  }
              ],
              "acme_account_key": "file:///var/lib/jenkins/digitalmarketplace-credentials/acme/letsencrypt-${TARGET_STAGE}.key"
          }
          EOF
          )

          python letsencrypt-aws.py update-certificates

          ELB_CERTIFICATE_ARN=$(aws elb describe-load-balancers --load-balancer-name ${ELB_NAME} --query 'LoadBalancerDescriptions[0].ListenerDescriptions[0].Listener.SSLCertificateId' --output text)
          ELB_CERTIFICATE_NAME=$(basename $ELB_CERTIFICATE_ARN)

          if [ -z "$ELB_CERTIFICATE_NAME" ]; then
              echo "Failed to parse ELB certificate name"
              exit 1
          fi

          if [ "$CERTIFICATE_NAME" == "$ELB_CERTIFICATE_NAME" ]; then
              echo "Certificate $ELB_CERTIFICATE_NAME not replaced"
          else
              echo "Updating certificate name"
              echo "Renaming $CERTIFICATE_NAME to $OLD_CERTIFICATE_NAME"
              aws iam update-server-certificate --server-certificate-name "$CERTIFICATE_NAME" --new-server-certificate-name "$OLD_CERTIFICATE_NAME"
              echo "Renaming $ELB_CERTIFICATE_NAME to $CERTIFICATE_NAME"
              aws iam update-server-certificate --server-certificate-name "$ELB_CERTIFICATE_NAME" --new-server-certificate-name "$CERTIFICATE_NAME"
          fi

    publishers:
      - trigger-parameterized-builds:
          - project: notify-slack
            condition: UNSTABLE_OR_WORSE
            predefined-parameters: |
              USERNAME=deploy
              JOB="Update TLS certificate"
              ICON=:fire:
              STAGE=preview
              STATUS=FAILED
              URL=<${BUILD_URL}consoleFull|${BUILD_DISPLAY_NAME}>
              CHANNEL=#dm-release

- job:
    name: "update-tls-cert-preview"
    display-name: "Update preview TLS certificate"
    project-type: freestyle
    description: |
      Update preview letsencrypt certificate
    logrotate:
      daysToKeep: 20
      artifactDaysToKeep: 20
    triggers:
      - timed: "H 1 * * *"
    builders:
      - trigger-builds:
        - project: update-tls-cert
          predefined-parameters: |
            TARGET_STAGE=preview
          block: true
