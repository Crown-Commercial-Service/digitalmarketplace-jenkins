{% set environments = ['production'] %}
{% set framework_data_drive_folders = {
#    'digital-outcomes-and-specialists-5': '1KqVLn0yHBt3Sd7BJrNwo1mw7C31HCpPB',
#    'digital-outcomes-and-specialists-6': '1QSiKocZbuQeGXqeIKMoNDK4RvvFeNtnb',
#    'digital-outcomes-and-specialists-7': '1PZQp2c_3O3fe82POThq6Gea6AHD1L2b0',
#    'digital-outcomes-and-specialists-8': '19C-pOTvBh8ki9LOeWBf3AUm_DDVkzqUR',
#    'digital-outcomes-and-specialists-9': '1x5-70gVBb2sFbxmVObs8qWUkDmHwUE-4',
    'g-cloud-12': '1LVGqBCRhjpl2OrKaUouh8rEiV3dpBep_',
#    'g-cloud-13': '16gkAlN9oR1JTakk1c0blPA_zabcIWRSG',
#    'g-cloud-14': '1zi8hwhymblSXsSgWsVcsIT1nHX5j-0Pb',
#    'g-cloud-15': '1oN1UoDNYXWoJruHzfGO9yC0SvfDt9wWN',
#    'g-cloud-16': '1fWI3LrnPU1cHVYo_83KWfgND-lng2ztM',
} %}
---
{% for environment in environments %}
  - job:
      name: "export-framework-applicant-details-{{ environment }}"
      display-name: "Export framework applicant details - {{ environment }}"
      project-type: pipeline
      triggers:
        - timed: "H 23 * * *"
      description: |
        <p>foo</p>
      dsl: |

        def notify_slack() {
          build job: "notify-slack",
            parameters: [
              string(name: 'USERNAME', value: "upload-application-statistics-{{ environment }}"),
              string(name: 'ICON', value: ':sad-docker:'),
              string(name: 'JOB', value: "Upload application stats - {{ environment }}"),
              string(name: 'CHANNEL', value: "#dm-release"),
              text(name: 'STAGE', value: "{{ environment }}"),
              text(name: 'STATUS', value: 'FAILED'),
              text(name: 'URL', value: "<${BUILD_URL}consoleFull|${BUILD_DISPLAY_NAME}>")
            ]
        }

        node {
          currentBuild.displayName = "#${BUILD_NUMBER} - {{ environment }}"
          withEnv([
            "FILENAME=data/{{ environment }}-{{ framework }}-application-statistics-${new java.text.SimpleDateFormat('yyyyMMddHHmm').format(new Date())}.json"
          ]) {
            try {
              {% for framework, drive_folder in framework_data_drive_folders %}
                stage("{{ framework }}") {

                sh("rm -rf ./data && mkdir data")
                docker run
                  -e DM_DATA_API_TOKEN_{{ environment|upper }}
                  --user $(id -u)
                  --volume $(pwd)/data:/app/data
                  digitalmarketplace/scripts
                  scripts/framework-applications/snapshot-framework-stats.py \
                    "{{ environment }}" \
                    "{{ framework }}" \
                    "data/${FILENAME}" \
                  /usr/local/bin/gdrive --config "/var/lib/jenkins/.gdrive" upload --delete "./data/${FILENAME}" "{{ drive_folder }}"
              {% endfor %}
            }
          }
        } catch(err) {
          notify_slack()
        }
{% endfor %}
