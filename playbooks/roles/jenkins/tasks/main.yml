---
- name: Add Jenkins apt repository key.
  apt_key:
    url: "{{ jenkins_repo_key_url }}"
    state: present
  tags: jenkins

- name: Add Jenkins apt repository.
  apt_repository:
    repo: "{{ jenkins_repo_url }}"
    state: present
    update_cache: yes
  tags: jenkins

- name: Ensure latest release of Jenkins is installed.
  apt: pkg=jenkins state=latest update_cache=yes
  notify: restart jenkins
  tags: jenkins

- name: Ensure Jenkins is started and runs on startup.
  service: name=jenkins state=started enabled=yes

- name: Remove existing Jenkins config
  file: path=/data/jenkins/{{ item }} state=absent
  notify: restart jenkins
  with_items: jenkins_config_templates

- name: Wait for Jenkins to start up before proceeding.
  shell: curl --head --silent http://{{ jenkins_hostname }}:8080/cli/
  register: result
  until: result.stdout.find("200 OK") != -1
  retries: "{{ jenkins_connection_retries }}"
  delay: "{{ jenkins_connection_delay }}"
  changed_when: false

- name: Get the jenkins-cli jarfile from the Jenkins server.
  get_url:
    url: "http://{{ jenkins_hostname }}:8080/jnlpJars/jenkins-cli.jar"
    dest: "{{ jenkins_jar_location }}"
  register: jarfile_get
  until: "'OK' in jarfile_get.msg or 'file already exists' in jarfile_get.msg"
  retries: 5
  delay: 10

- include: letsencrypt.yml tags=letsencrypt
- include: nginx.yml tags=nginx
- include: jobs.yml tags=jobs
- include: tools.yml tags=tools
- include: gdrive.yml tags=gdrive
- include: docker.yml tags=docker
- include: paas.yml
  tags: [paas,cloudfoundry]
- include: plugins.yml tags=plugins
- include: config.yml tags=config

- include: sops.yml
  tags: [sops]
