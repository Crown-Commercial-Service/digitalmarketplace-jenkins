---
- name: Adding APT repository key
  tags: [apt]
  apt_key:
    id: ACCC4CF8
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc

- name: Add postgres repository
  tags: [apt]
  apt_repository:
    repo: "deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main"
    state: present
    update_cache: yes

- name: Install tools
  tags: [apt]
  apt: update_cache=yes name={{ item }}
  with_items:
    - git
    - libpq-dev
    - python-dev
    - libyaml-dev
    - libreadline-dev
    - libffi-dev
    - postgresql-client-9.5
    - curl
    - zip
    - unzip
    - ntp
    - jq
    - xvfb

- name: Add repository for newer wkhtmltopdf (the default version 0.9.9 is very old)
  tags: [apt]
  apt_repository:
    repo: "ppa:ecometrica/servers"
    state: present
    update_cache: yes

- name: Install wkhtmltopdf
  tags: [apt]
  apt: update_cache=yes state=latest name=wkhtmltopdf

- name: Install rbenv and pyenv
  sudo: yes
  sudo_user: jenkins
  git: repo={{ item.repo }} dest=/var/lib/jenkins/{{ item.path }}
  with_items:
    - {repo: "https://github.com/sstephenson/rbenv.git", path: ".rbenv"}
    - {repo: "https://github.com/sstephenson/ruby-build.git", path: ".rbenv/plugins/ruby-build"}
    - {repo: "https://github.com/carsomyr/rbenv-bundler.git", path: ".rbenv/plugins/bundler"}
    - {repo: "https://github.com/yyuu/pyenv.git", path: ".pyenv"}
    - {repo: "https://github.com/yyuu/pyenv-virtualenv.git", path: ".pyenv/plugins/pyenv-virtualenv"}

- name: Add .rbenv and .pyenv to PATH
  lineinfile:
    dest: /var/lib/jenkins/.bash_profile
    create: yes
    regexp: 'export PATH="\$HOME/{{ item.path }}/bin'
    line: 'export PATH="$HOME/{{ item.path }}/bin:$PATH" && export {{ item.env_var }}="$HOME/{{ item.path }}"'
    owner: jenkins
    group: jenkins
  with_items:
    - {path: ".rbenv", env_var: "RBENV_ROOT"}
    - {path: ".pyenv", env_var: "PYENV_ROOT"}

- name: Add rbenv and pyenv init
  lineinfile:
    dest: /var/lib/jenkins/.bash_profile
    regexp: '{{ item.name }} init'
    line: 'eval "$({{ item.name }} init -)"'
    owner: jenkins
    group: jenkins
  with_items:
    - {name: "rbenv"}
    - {name: "pyenv"}

- name: Install pyenv python
  shell: "sudo su jenkins -c 'source $HOME/.bash_profile && pyenv install -s 2.7.9 && pyenv global 2.7.9 && $HOME/.pyenv/shims/pip install virtualenv'"

- name: Add .aws config directory
  file: path=/var/lib/jenkins/.aws state=directory owner=jenkins group=jenkins

- name: Add AWS credentials file
  template: src=aws_credentials.j2 dest=/var/lib/jenkins/.aws/credentials

- name: Copy the NodeSource GPG key to the remote
  copy:
    src: ../files/nodesource.gpg.key
    dest: /tmp/nodesource.gpg.key

- name: Import the NodeSource GPG key into apt
  tags: [apt]
  apt_key:
    file: /tmp/nodesource.gpg.key
    state: present

- name: Add NodeJS apt repository
  tags: [apt]
  apt_repository:
    repo: "deb https://deb.nodesource.com/node_4.x xenial main"
    state: present
    update_cache: yes

- name: Install NodeJS
  tags: [apt]
  apt: pkg=nodejs=4.* state=installed

# TODO: Stop installing PhantomJS like this when there is a better
#       apt source available.
- name: Download PhantomJS
  get_url:
    url: "https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2"
    dest: /usr/local/src/phantomjs-2.1.1-linux-x86_64.tar.bz2

- name: Unarchive PhantomJS
  unarchive:
    src: /usr/local/src/phantomjs-2.1.1-linux-x86_64.tar.bz2
    dest: /usr/local/src
    copy: no

- name: Install PhantomJS binary
  command: "cp /usr/local/src/phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/local/bin/phantomjs"

- name: Install AWS cli
  tags: [awscli]
  pip:
    name: awscli
    state: present
