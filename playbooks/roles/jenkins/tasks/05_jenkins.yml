---

- name: Add Jenkins apt repository key.
  apt_key: url="https://pkg.jenkins.io/debian-stable/jenkins.io.key" state=present

- name: Add Jenkins apt repository.
  apt_repository: repo="deb https://pkg.jenkins.io/debian-stable binary/"  state=present update_cache=yes

- name: Set Jenkins service boot config
  template: src=jenkins_defaults.j2
            dest=/etc/default/jenkins
            backup=no

- name: Ensure Jenkins is installed.
  apt:
    name: jenkins=2.*
    state: present
    update_cache: true
  register: jenkins_package_install
  tags:
    - upgrade_jenkins

- name: Forced restart after first time package installation
  service: name=jenkins state=restarted
  when: jenkins_package_install.changed

- wait_for: port=8080 delay=20
  when: jenkins_package_install.changed

- name: Check if first time install
  command: "test -e {{ jenkins_data_dir }}/secrets/initialAdminPassword"
  ignore_errors: yes
  register: first_time_install_test

- name: Supress wizard mode (debian)
  lineinfile: dest="/etc/default/jenkins" insertbefore="^JENKINS_ARGS.*" line="JAVA_ARGS=\"{{ jenkins_java_args }}\""
  when: not (first_time_install_test is failed)

- name: Remove initial Jenkins password
  file: name="{{ jenkins_data_dir }}/secrets/initialAdminPassword" state=absent
  ignore_errors: yes
  when: not (first_time_install_test is failed)

- name: Find Jenkins admin user directory
  when: not (first_time_install_test is failed)
  find:
    paths: "{{ jenkins_data_dir }}/users"
    pattern: "admin_*"
    file_type: directory
  register: jenkins_user_admin

- name: Set Jenkins admin user password
  when: not (first_time_install_test is failed)
  lineinfile:
    path: "{{ jenkins_user_admin.files[0].path }}/config.xml"
    regexp: '^(\s)*<passwordHash>(.*)'
    line: '      <passwordHash>{{ jenkins_admin_password_hash }}</passwordHash>'
    owner: "jenkins"

- name: Forced restart to pick up any changes
  service: name=jenkins state=restarted

- wait_for: port=8080 delay=20
